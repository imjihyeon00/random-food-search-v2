name: Firebase Deploy (Production)

on:
  push:
    branches: [ "main" ]

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: npm

      - name: Debug npm configs (safe)
        run: |
          echo "userconfig: $(npm config get userconfig)"
          echo "globalconfig: $(npm config get globalconfig)"
          echo "registry: $(npm config get registry)"
          if [ -f .npmrc ]; then echo "repo .npmrc exists"; fi
          if [ -f "$HOME/.npmrc" ]; then echo "HOME .npmrc exists"; fi

      - name: Force clean npmrc for public registry (bulletproof)
        run: |
          # 워크스페이스(레포 루트)에 '깨끗한' .npmrc 생성
          printf "registry=https://registry.npmjs.org/\nfund=false\naudit=false\n" > .npmrc

          # 혹시 남아 있을지 모르는 토큰성 환경변수 제거
          unset NPM_TOKEN || true
          unset NODE_AUTH_TOKEN || true

          # 디버그
          echo "Using userconfig: $GITHUB_WORKSPACE/.npmrc"
          cat .npmrc
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}

      - name: Install deps
        env:
          # ⬅️ 이 줄이 핵심: 이번 Job에서 npm이 볼 userconfig를 우리가 만든 파일로 고정
          NPM_CONFIG_USERCONFIG: ${{ github.workspace }}/.npmrc
        run: |
          npm ci --no-audit --no-fund --registry=https://registry.npmjs.org/


      - name: Create .env for build
        run: |
          cat <<EOF > .env
          VITE_KAKAO_API_KEY=${{ secrets.VITE_KAKAO_API_KEY }}
          VITE_CONTACT_ENDPOINT=${{ secrets.VITE_CONTACT_ENDPOINT }}
          VITE_RECAPTCHA_SITE_KEY=${{ secrets.VITE_RECAPTCHA_SITE_KEY }}
          EOF

      - name: Build
        run: npm run build

      - name: Deploy to Firebase Hosting (live)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_RANDOM_FOOD_STORE }}
          projectId: random-food-store
          channelId: live
